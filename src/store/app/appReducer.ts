import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState, AppThunk } from '..';

export interface AppState {
  isLoading: boolean;
  isLoggedIn: boolean;
};

const initialState: AppState = {
  isLoading: true,
  isLoggedIn: false,
};


export const appSlice = createSlice({
    name: 'app',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
      setIsLoading: (state: { isLoading: boolean; }, action: PayloadAction<boolean>) => {
        state.isLoading = action.payload;
      },
      setIsLoggedIn: (state: { isLoggedIn: boolean; }, action: PayloadAction<boolean>) => {
        state.isLoggedIn = action.payload;
      },
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
  });

  export const { setIsLoading, setIsLoggedIn } = appSlice.actions;

  export const selectIsLoading = (state: RootState) => state.app.isLoading;
  export const selectIsLoggedIn = (state: RootState) => state.app.isLoggedIn;

  export default appSlice.reducer;